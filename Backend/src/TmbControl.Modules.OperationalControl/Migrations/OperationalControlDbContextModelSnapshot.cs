// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TmbControl.Modules.OperationalControl.Persistence;

#nullable disable

namespace TmbControl.Modules.OperationalControl.Migrations
{
    [DbContext(typeof(OperationalControlDbContext))]
    partial class OperationalControlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("operational_control")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.ActualControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Concept")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("concept");

                    b.Property<string>("Control")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("control");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("integer")
                        .HasColumnName("frequency_id");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<DateOnly?>("LastReview")
                        .HasColumnType("date")
                        .HasColumnName("last_review");

                    b.Property<DateOnly?>("NextReview")
                        .HasColumnType("date")
                        .HasColumnName("next_review");

                    b.Property<string>("Observations")
                        .HasColumnType("text")
                        .HasColumnName("observations");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_actual_controls");

                    b.HasIndex("FrequencyId")
                        .HasDatabaseName("ix_actual_controls_frequency_id");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ix_actual_controls_group_id");

                    b.HasIndex("StatusId")
                        .HasDatabaseName("ix_actual_controls_status_id");

                    b.ToTable("actual_controls", "operational_control");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_frequencies");

                    b.ToTable("frequencies", "operational_control");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_groups");

                    b.ToTable("groups", "operational_control");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Revision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ActualControlId")
                        .HasColumnType("uuid")
                        .HasColumnName("actual_control_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("integer")
                        .HasColumnName("frequency_id");

                    b.Property<DateOnly?>("NextReview")
                        .HasColumnType("date")
                        .HasColumnName("next_review");

                    b.Property<string>("Observations")
                        .HasColumnType("text")
                        .HasColumnName("observations");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.HasKey("Id")
                        .HasName("pk_revisions");

                    b.HasIndex("ActualControlId")
                        .HasDatabaseName("ix_revisions_actual_control_id");

                    b.HasIndex("FrequencyId")
                        .HasDatabaseName("ix_revisions_frequency_id");

                    b.HasIndex("StatusId")
                        .HasDatabaseName("ix_revisions_status_id");

                    b.ToTable("revisions", "operational_control");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_statuses");

                    b.ToTable("statuses", "operational_control");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.ActualControl", b =>
                {
                    b.HasOne("TmbControl.Modules.OperationalControl.Entities.Frequency", "Frequency")
                        .WithMany("ActualControls")
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_actual_controls_frequencies_frequency_id");

                    b.HasOne("TmbControl.Modules.OperationalControl.Entities.Group", "Group")
                        .WithMany("ActualControls")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_actual_controls_groups_group_id");

                    b.HasOne("TmbControl.Modules.OperationalControl.Entities.Status", "Status")
                        .WithMany("ActualControls")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_actual_controls_statuses_status_id");

                    b.Navigation("Frequency");

                    b.Navigation("Group");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Revision", b =>
                {
                    b.HasOne("TmbControl.Modules.OperationalControl.Entities.ActualControl", "ActualControl")
                        .WithMany("Revisions")
                        .HasForeignKey("ActualControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_revisions_actual_controls_actual_control_id");

                    b.HasOne("TmbControl.Modules.OperationalControl.Entities.Frequency", "Frequency")
                        .WithMany("Revisions")
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_revisions_frequencies_frequency_id");

                    b.HasOne("TmbControl.Modules.OperationalControl.Entities.Status", "Status")
                        .WithMany("Revisions")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_revisions_statuses_status_id");

                    b.Navigation("ActualControl");

                    b.Navigation("Frequency");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.ActualControl", b =>
                {
                    b.Navigation("Revisions");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Frequency", b =>
                {
                    b.Navigation("ActualControls");

                    b.Navigation("Revisions");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Group", b =>
                {
                    b.Navigation("ActualControls");
                });

            modelBuilder.Entity("TmbControl.Modules.OperationalControl.Entities.Status", b =>
                {
                    b.Navigation("ActualControls");

                    b.Navigation("Revisions");
                });
#pragma warning restore 612, 618
        }
    }
}
