// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TmbControl.Modules.Communications.Persistence;

#nullable disable

namespace TmbControl.Modules.Communications.Migrations
{
    [DbContext(typeof(CommunicationsDbContext))]
    partial class CommunicationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("communications")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", "communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Communication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("due_date");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("FilePath")
                        .HasColumnType("text")
                        .HasColumnName("file_path");

                    b.Property<int?>("FormatId")
                        .HasColumnType("integer")
                        .HasColumnName("format_id");

                    b.Property<int>("OriginId")
                        .HasColumnType("integer")
                        .HasColumnName("origin_id");

                    b.Property<Guid?>("RelatedId")
                        .HasColumnType("uuid")
                        .HasColumnName("related_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_communications");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_communications_category_id");

                    b.HasIndex("FormatId")
                        .HasDatabaseName("ix_communications_format_id");

                    b.HasIndex("OriginId")
                        .HasDatabaseName("ix_communications_origin_id");

                    b.HasIndex("RelatedId")
                        .HasDatabaseName("ix_communications_related_id");

                    b.HasIndex("StatusId")
                        .HasDatabaseName("ix_communications_status_id");

                    b.ToTable("communications", "communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_formats");

                    b.ToTable("formats", "communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Origin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_origins");

                    b.ToTable("origins", "communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Responsible", b =>
                {
                    b.Property<Guid>("CommunicationId")
                        .HasColumnType("uuid")
                        .HasColumnName("communication_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("CommunicationId", "UserId")
                        .HasName("pk_responsibles");

                    b.ToTable("responsibles", "communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_statuses");

                    b.ToTable("statuses", "communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Communication", b =>
                {
                    b.HasOne("TmbControl.Modules.Communications.Entities.Category", "Category")
                        .WithMany("Communications")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_communications_categories_category_id");

                    b.HasOne("TmbControl.Modules.Communications.Entities.Format", "Format")
                        .WithMany("Communications")
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_communications_formats_format_id");

                    b.HasOne("TmbControl.Modules.Communications.Entities.Origin", "Origin")
                        .WithMany("Communications")
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_communications_origins_origin_id");

                    b.HasOne("TmbControl.Modules.Communications.Entities.Communication", "Related")
                        .WithMany("RelatedTo")
                        .HasForeignKey("RelatedId")
                        .HasConstraintName("fk_communications_communications_related_id");

                    b.HasOne("TmbControl.Modules.Communications.Entities.Status", "Status")
                        .WithMany("Communications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_communications_statuses_status_id");

                    b.Navigation("Category");

                    b.Navigation("Format");

                    b.Navigation("Origin");

                    b.Navigation("Related");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Responsible", b =>
                {
                    b.HasOne("TmbControl.Modules.Communications.Entities.Communication", "Communication")
                        .WithMany("Responsibles")
                        .HasForeignKey("CommunicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_responsibles_communications_communication_id");

                    b.Navigation("Communication");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Category", b =>
                {
                    b.Navigation("Communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Communication", b =>
                {
                    b.Navigation("RelatedTo");

                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Format", b =>
                {
                    b.Navigation("Communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Origin", b =>
                {
                    b.Navigation("Communications");
                });

            modelBuilder.Entity("TmbControl.Modules.Communications.Entities.Status", b =>
                {
                    b.Navigation("Communications");
                });
#pragma warning restore 612, 618
        }
    }
}
